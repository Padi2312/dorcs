name: Pre-release dorcs
on: workflow_dispatch

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows]
        goarch: [amd64]  # Add more architectures if needed

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        run: |
          version=$(grep -o 'var version = "[^"]*"' main.go | cut -d'"' -f2)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.2'  # Use the Go version that your project requires

      - name: Build
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.goarch }} go build -o ${{ github.workspace }}/build/dorcs-${{ matrix.os }}-${{ matrix.goarch }}${{ matrix.os == 'windows' && '.exe' || '' }} main.go

      - name: Archive build
        run: |
          binary_name=dorcs-${{ matrix.os }}-${{ matrix.goarch }}${{ matrix.os == 'windows' && '.exe' || '' }}
          zip -j ${{ github.workspace }}/build/$binary_name.zip ${{ github.workspace }}/build/$binary_name

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dorcs-${{ matrix.os }}-${{ matrix.goarch }}
          path: ${{ github.workspace }}/build/dorcs-${{ matrix.os }}-${{ matrix.goarch }}.zip

      - name: Tag commit
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.workspace }}/build/dorcs-${{ matrix.os }}-${{ matrix.goarch }}.zip
          tag_name: ${{ env.VERSION }}
          prerelease: true
